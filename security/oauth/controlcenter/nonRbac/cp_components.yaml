apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: operator
spec:
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
  tls:
    autoGeneratedCerts: true
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: operator
spec:
  configOverrides:
    log4j:
      - log4j.logger.io.confluent.rest-utils=DEBUG, stdout
      - log4j.additivity.io.confluent.rest-utils=false
      - log4j.logger.io.confluent.rbacapi=DEBUG, stdout
      - log4j.additivity.io.confluent.rbacapi=false
      - log4j.logger.io.confluent.tokenapi=DEBUG, stdout
      - log4j.additivity.io.confluent.tokenapi=false
      - log4j.logger.io.confluent.security.auth=DEBUG, stdout
      - log4j.additivity.io.confluent.security.auth=false
      - log4j.logger.io.confluent.security.store=DEBUG, stdout
      - log4j.additivity.io.confluent.security.store=false
      - log4j.logger.io.confluent.common.security.jetty=DEBUG, stdout
      - log4j.additivity.io.confluent.common.security.jetty=false
      - log4j.logger.io.confluent.security.auth.provider.ldap=TRACE, stdout
  replicas: 3
  image:
    application: confluentinc/cp-server:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          subClaimName: client_id
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: plain
          jaasConfig:
            secretRef: credential
      clusterRef:
        name: kraftcontroller
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: operator
spec:
  podTemplate:
    probe:
      liveness:
        periodSeconds: 400
        failureThreshold: 1
        timeoutSeconds: 5
      readiness:
        periodSeconds: 400
        failureThreshold: 5
        timeoutSeconds: 5
  replicas: 2
  image:
    application: confluentinc/cp-server-connect:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jass
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: operator
spec:
  configOverrides:
    log4j:
      - log4j.logger.io.confluent.rest-utils=DEBUG, stdout
      - log4j.additivity.io.confluent.rest-utils=false
      - log4j.logger.io.confluent.rbacapi=DEBUG, stdout
      - log4j.additivity.io.confluent.rbacapi=false
      - log4j.logger.io.confluent.tokenapi=DEBUG, stdout
      - log4j.additivity.io.confluent.tokenapi=false
      - log4j.logger.io.confluent.security.auth=DEBUG, stdout
      - log4j.additivity.io.confluent.security.auth=false
      - log4j.logger.io.confluent.security.store=DEBUG, stdout
      - log4j.additivity.io.confluent.security.store=false
      - log4j.logger.io.confluent.common.security.jetty=DEBUG, stdout
      - log4j.additivity.io.confluent.common.security.jetty=false
      - log4j.logger.io.confluent.security.auth.provider.ldap=TRACE, stdout
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jass
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: operator
spec:
  configOverrides:
    log4j:
      - log4j.rootLogger=DEBUG, stdout
    server:
      - control.center.replication.factor=3
      - control.center.internal.topics.replication.factor=3
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 200
        failureThreshold: 1
        timeoutSeconds: 5
      readiness:
        periodSeconds: 200
        failureThreshold: 5
        timeoutSeconds: 5
  image:
    application: confluentinc/cp-enterprise-control-center:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.operator.svc.cluster.local:8083
        authentication:
          type: oauth
          oauth:
            secretRef: oauth-jass
            configuration:
              tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.operator.svc.cluster.local:8081
      authentication:
        type: oauth
        oauth:
          secretRef: oauth-jass
          configuration:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
