apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: operator
spec:
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:8.0.0
    init: confluentinc/confluent-init-container:3.0.0
    pullSecretRef:
      - confluent-registry
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: oauth
        oauthSettings:
          groupsClaimName: groups
          expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
          jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
          clientAssertion:
            clientId: private-key-client
            localClientAssertion:
              issuer: private-key-client
              subject: private-key-client
              audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
              privateKeyFile:
                secretRef: private-key
              includeJtiClaim: true
  tls:
    autoGeneratedCerts: true
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: operator
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:8.0.0
    init: confluentinc/confluent-init-container:3.0.0
    pullSecretRef:
      - confluent-registry
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    external:
      authentication:
        type: oauth
        oauthSettings:
          groupsClaimName: groups
          expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
          jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
          clientAssertion:
            clientId: private-key-client
            localClientAssertion:
              issuer: private-key-client
              subject: private-key-client
              audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
              privateKeyFile:
                secretRef: private-key
              includeJtiClaim: true
      tls:
        enabled: true
    internal:
      authentication:
        type: oauth
        oauthSettings:
          groupsClaimName: groups
          expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
          jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
          clientAssertion:
            clientId: private-key-client
            localClientAssertion:
              issuer: private-key-client
              subject: private-key-client
              audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
              privateKeyFile:
                secretRef: private-key
              includeJtiClaim: true
      tls:
        enabled: true
    replication:
      authentication:
        type: oauth
        jaasConfigPassThrough:
          secretRef: pass-through-repl
        oauthSettings:
          groupsClaimName: groups
          expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
          jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
          clientAssertion:
            clientId: private-key-client
            localClientAssertion:
              issuer: private-key-client
              subject: private-key-client
              audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
              privateKeyFile:
                secretRef: private-key
              includeJtiClaim: true
      tls:
        enabled: true
    custom:
      - name: customoauth
        port: 9094
        authentication:
          type: oauth
          oauthSettings:
            groupsClaimName: groups
            expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
            jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
            tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
            clientAssertion:
              clientId: private-key-client
              localClientAssertion:
                issuer: private-key-client
                subject: private-key-client
                audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
                privateKeyFile:
                  secretRef: private-key
                includeJtiClaim: true
        tls:
          enabled: true
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: oauth
          oauthSettings:
            tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
            clientAssertion:
              clientId: private-key-client
              localClientAssertion:
                issuer: private-key-client
                subject: private-key-client
                audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
                privateKeyFile:
                  secretRef: private-key
                includeJtiClaim: true
      clusterRef:
        name: kraftcontroller
    schemaRegistry:
      url: http://schemaregistry.operator.svc.cluster.local:8081
      authentication:
        type: oauth
        oauth:
          configuration:
            groupsClaimName: groups
            expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
            jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
            tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
            clientAssertion:
              clientId: private-key-client
              localClientAssertion:
                issuer: private-key-client
                subject: private-key-client
                audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
                privateKeyFile:
                  secretRef: private-key
                includeJtiClaim: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: operator
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:8.0.0
    init: confluentinc/confluent-init-container:3.0.0
    pullSecretRef:
      - confluent-registry
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      configuration:
        groupsClaimName: groups
        expectedIssuer: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test
        jwksEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/certs
        tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
        clientAssertion:
          clientId: private-key-client
          localClientAssertion:
            issuer: private-key-client
            subject: private-key-client
            audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
            privateKeyFile:
              secretRef: private-key
            includeJtiClaim: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9071
      authentication:
        type: oauth
        oauthSettings:
          tokenEndpointUri: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
          clientAssertion:
            clientId: private-key-client
#            jwtTokenFile:
#              secretRef: jwt-secret
            localClientAssertion:
              issuer: private-key-client
              subject: private-key-client
              audience: http://keycloak.operator.svc.cluster.local:8080/realms/sso_test/protocol/openid-connect/token
              privateKeyFile:
                secretRef: private-key
              includeJtiClaim: true
      tls:
        enabled: true
