apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: operator
spec:
  # Truststore containing CA cert for self signed IDP
  configOverrides:
    jvm:
      - "-Djavax.net.ssl.trustStore=/mnt/jvmtruststore/truststore.jks"
      - "-Djavax.net.ssl.trustStorePassword=mystorepassword"
  mountedVolumes:
    volumes:
      - name: customtruststore
        secret:
          secretName: mycustomtruststore
    volumeMounts:
      - name: customtruststore
        mountPath: /mnt/jvmtruststore
# Another option is to use configOverride or jaasConfigOverride
#  configOverrides:
#    server:
#      - listener.name.controller.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId="${file:/mnt/secrets/oauth-jass/oauth.txt:clientId}" clientSecret="${file:/mnt/secrets/oauth-jass/oauth.txt:clientSecret}" refresh_ms="3000" ssl.truststore.location="/mnt/sslcerts/truststore.jks" ssl.truststore.password="mystorepassword" unsecuredLoginStringClaim_sub="thePrincipalName";
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
          jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
  tls:
    autoGeneratedCerts: true
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: operator
spec:
  # Truststore containing CA cert for self signed IDP
  configOverrides:
    jvm:
      - "-Djavax.net.ssl.trustStore=/mnt/jvmtruststore/truststore.jks"
      - "-Djavax.net.ssl.trustStorePassword=mystorepassword"
  mountedVolumes:
    volumes:
      - name: customtruststore
        secret:
          secretName: mycustomtruststore
    volumeMounts:
      - name: customtruststore
        mountPath: /mnt/jvmtruststore
  replicas: 3
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    external:
      authentication:
        type: oauth
        oauthSettings:
          tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
          jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
      tls:
        enabled: true
    internal:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
          jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
      tls:
        enabled: true
    replication:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
          jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
      tls:
        enabled: true
    custom:
      - name: customoauth
        port: 9094
        authentication:
          type: oauth
          oauthSettings:
            tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
            expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
            jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
        tls:
          enabled: true
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: oauth
          jaasConfig:
            secretRef: oauth-jass
          oauthSettings:
            tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
      clusterRef:
        name: kraftcontroller
  services:
    kafkaRest:
      authentication:
        type: oauth
        oauth:
          secretRef: oauth-jass
          configuration:
            tokenEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/token
            expectedIssuer: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test
            jwksEndpointUri: https://keycloak.operator.svc.cluster.local:8443/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
---