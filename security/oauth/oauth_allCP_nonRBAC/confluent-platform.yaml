apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  replicas: 3
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
    external:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: my.domain
          brokerPrefix: rb
          bootstrapPrefix: rb
      tls:
        enabled: true
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: oauth
          jaasConfig:
            secretRef: oauth-jaas
          oauthSettings:
            subClaimName: client_id
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      clusterRef:
        name: kraftcontroller
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jaas
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jaas
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jaas
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: oauth
        oauth:
          secretRef: oauth-jaas
          configuration:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  authentication:
    type: oauth
    oauth:
      secretRef: oauth-jaas
      configuration:
        tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        expectedIssuer: http://keycloak:8080/realms/sso_test
        jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
        subClaimName: client_id
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-enterprise-control-center:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jaas
        oauthSettings:
          subClaimName: client_id
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.confluent.svc.cluster.local:8083
        authentication:
          type: oauth
          oauth:
            secretRef: oauth-jaas
            configuration:
              tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: oauth
        oauth:
          secretRef: oauth-jaas
          configuration:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true