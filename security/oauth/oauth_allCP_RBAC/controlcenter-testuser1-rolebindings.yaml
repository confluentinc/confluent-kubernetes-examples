---
# rolebinding `testuser1-cfrb-kafka` allows `testuser1` to see kafka cluster
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: testuser1-cfrb-kafka
  namespace: confluent
spec:
  principal:
    name: 163ee8e8-04f8-4de2-ba22-daf394eea8f1 # corresponding sub from keycloak against testuser1
    type: user
  role: ClusterAdmin
---
# rolebinding `testuser1-rb-connect` allows `testuser1` to see connect cluster
# `connectClusterId` pattern: `<namespace>.<connect.name>`
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: testuser1-rb-connect
  namespace: confluent
spec:
  principal:
    type: user
    name: 163ee8e8-04f8-4de2-ba22-daf394eea8f1
  clustersScopeByIds:
    connectClusterId: confluent.connect
  role: ClusterAdmin
  ## if use other kafkaRestClass except for default, need to configure accordingly
  #kafkaRestClassRef:
  # name: default
---
# rolebinding `testuser1-rb-sr` allows `testuser1` to see schemaregistry information
# `schemaRegistryCllusterId` pattern: `id_<schemaregistry.name>_<namespace>`
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: testuser1-rb-sr
  namespace: confluent
spec:
  principal:
    type: user
    name: 163ee8e8-04f8-4de2-ba22-daf394eea8f1
  clustersScopeByIds:
    schemaRegistryClusterId: id_schemaregistry_confluent
  role: SystemAdmin
---
# rolebinding `testuser1-rb-ksql` allows `testuser1` to see ksqldb cluster
# `ksqlClusterId` pattern: `<namespace>.<ksqldb.name>`
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: testuser1-rb-ksql
  namespace: confluent
spec:
  principal:
    type: user
    name: 163ee8e8-04f8-4de2-ba22-daf394eea8f1
  clustersScopeByIds:
    ksqlClusterId: confluent.ksqldb_
  role: ResourceOwner
  resourcePatterns:
    - name: ksql-cluster
      patternType: LITERAL
      resourceType: KsqlCluster
  ## if use other kafkaRestClass except for default, need to configure accordingly
  #kafkaRestClassRef:
  # name: default