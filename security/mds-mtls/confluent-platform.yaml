apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 10Gi
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-server:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  listeners:
    controller:
      authentication:
        type: mtls
        principalMappingRules:
          - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
          - "DEFAULT"
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
      - User:kafka
  dependencies:
    mdsKafkaCluster:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
  tls:
    secretRef: tls-kafka
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  authorization:
    type: rbac
    superUsers:
      - User:kafka
  replicas: 3
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-server:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-kafka
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
          - "DEFAULT"
      tls:
        enabled: true
    external:
      authentication:
        type: mtls
        principalMappingRules:
          - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
          - "DEFAULT"
      tls:
        enabled: true
  metricReporter:
    enabled: true
    authentication:
      type: mtls
    tls:
      enabled: true
  services:
    mds:
      impersonation:
        admins:
          - User:kafka
          - User:krp # kafkarestproxy principal should always be added as impersonation admin
          # - User:connect # need to add this as impersonation admin when Connect has multiple nodes
          #- User:sr # need to add this as impersonation admin when SR has multiple nodes
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        mtls:
          sslClientAuthentication: "required"
          principalMappingRules:
            - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
            - "DEFAULT"
        file:
          secretRef: file-secret
  dependencies:
    kafkaRest:
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
        secretRef: tls-kafka
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: mtls
      clusterRef:
        name: kraftcontroller
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-kafka-rest:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  tls:
    secretRef: tls-kafkarestproxy
  authorization:
    type: rbac
  authentication:
    type: mtls
    mtls:
      sslClientAuthentication: "required"
      principalMappingRules:
        - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
        - "DEFAULT"
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: mtls
      tls:
        enabled: true
    interceptor:
      enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  authorization:
    type: rbac
  replicas: 1
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-enterprise-control-center:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-controlcenter
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: mtls
      tls:
        enabled: true
    connect:
      - name: connect
        url: https://connect.confluent.svc.cluster.local:8083
        authentication:
          type: mtls
        tls:
          enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-schema-registry:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  tls:
    secretRef: tls-schemaregistry
  authorization:
    type: rbac
  authentication:
    type: mtls
    mtls:
      sslClientAuthentication: "required"
      principalMappingRules: [ "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/" ,"RULE:.*CN=([a-zA-Z0-9]*).*$/$1/", "DEFAULT" ]
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/confluentinc/cp-server-connect:7.8.0-rc241023065244-6004-ubi8
    init: confluentinc/confluent-init-container:2.9.3
    pullSecretRef:
      - confluent-registry
  tls:
    secretRef: tls-connect
  authorization:
    type: rbac
  authentication:
    type: mtls
    mtls:
      sslClientAuthentication: "required"
      principalMappingRules: [ "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/" , "DEFAULT" ]
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: mtls
      tls:
        enabled: true
    interceptor:
      enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaClusterRef:
    name: kafka
    namespace: confluent
  kafkaRest:
    endpoint: https://kafka.confluent.svc.cluster.local:8090
    authentication:
      type: mtls
      sslClientAuthentication: true
    tls:
      secretRef: tls-kafka
