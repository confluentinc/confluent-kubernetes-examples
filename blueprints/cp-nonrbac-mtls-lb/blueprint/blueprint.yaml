---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: ConnectClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-connect-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP Connect Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
      k8s:
        podTemplate:
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
      connectorPlugins:
        confluentHubPlugins:
          - name: kafka-connect-datagen
            owner: confluentinc
            version: 0.5.2
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: ControlCenterClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-controlcenter-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP Control Center Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 1
      volume:
        data:
          capacity: 10Gi
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: KafkaClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-kafka-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP Kafka Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
      volume:
        data:
          capacity: 10Gi
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: KafkaRestProxyClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-kafkarestproxy-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP KafkaRestProxy Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: KsqlDBClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-ksqldb-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP KsqlDB Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
      volume:
        data:
          capacity: 10Gi
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: SchemaRegistryClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-schemaregistry-standard
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP SchemaRegistry Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
      enableSchemaExporter: true
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: ZookeeperClusterClass
metadata:
  name: cp-nonrbac-mtls-lb-zookeeper-standard
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents pre-set configuration to deploy CP Zookeeper Cluster."
spec:
  provisioner:
    type: cfk
    cfk:
      replicas: 3
      volume:
        data:
          capacity: 10Gi
        log:
          capacity: 10Gi
---
apiVersion: core.cpc.platform.confluent.io/v1beta1
kind: ConfluentPlatformBlueprint
metadata:
  name: cp-nonrbac-mtls-lb
  namespace: cpc-system
  annotations:
    cpc.platform.confluent.io/description: "This TILE represents configurations which are shared across all CP component."
spec:
  credentialStoreConfigRefs:
    - name: cp-nonrbac-mtls-lb-bp-csc
      namespace: cpc-system
  certificateStoreConfigRefs:
    - name: ca-key-pair-sce-7
      namespace: cpc-system
  dockerImages:
    - registry: docker.io
  internalCAKeyPair:
    providerType: blueprint
    blueprint:
      type: auto
  dnsConfig:
    domain: # Set this to the value of your Kubernetes domain, $DOMAIN
    providerType: deployment
    deployment:
      subdomainRegex: cpc+
  passwordEncoder:
    providerType: blueprint
    blueprint:
      credentialStoreRefs:
        forKafka:
          key: kafka-pwd-encoder.txt
          name: cp-nonrbac-mtls-lb-bp-csc
        forSchemaRegistry:
          key: sr-pwd-encoder.txt
          name: cp-nonrbac-mtls-lb-bp-csc
  confluentPlatform:
    version: 7.7.0
    http:
      authentication:
        type: mtls
      externalAccess:
        type: loadBalancer
        loadBalancer:
          advertisedPort: 8443
      tlsConfig:
        providerType: blueprint
    zookeeper:
      tlsConfig:
        providerType: blueprint
    kafkaListeners:
      global:
        externalAccessType: loadBalancer
      externalListener:
        authentication:
          type: mtls
        externalAccess:
          enabled: true
          loadBalancer:
            advertisedPort: 8443
        tlsConfig:
          providerType: blueprint
      customListeners:
        - authentication:
            type: mtls
          name: other
          port: 9093
          tlsConfig:
            providerType: blueprint
      internalListener:
        authentication:
          type: mtls
        tlsConfig:
          providerType: blueprint
  components:
    connectCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-connect-standard
        namespace: cpc-system
      externalAccess:
        enabled: true
    controlCenterCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-controlcenter-standard
        namespace: cpc-system
      externalAccess:
        enabled: true
    kafkaCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-kafka-standard
        namespace: cpc-system
    kafkaRestProxyCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-kafkarestproxy-standard
        namespace: cpc-system
      externalAccess:
        enabled: true
    ksqlDBCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-ksqldb-standard
        namespace: cpc-system
      externalAccess:
        enabled: true
    schemaRegistryCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-schemaregistry-standard
        namespace: cpc-system
      externalAccess:
        enabled: true
    zookeeperCluster:
      classRef:
        name: cp-nonrbac-mtls-lb-zookeeper-standard
        namespace: cpc-system



