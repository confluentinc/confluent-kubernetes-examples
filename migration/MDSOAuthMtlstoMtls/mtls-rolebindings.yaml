---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: controlcenter-mtls-1
  namespace: confluent
spec:
  principal:
    type: user
    name: c3
  role: SecurityAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: controlcenter-mtls-2
  namespace: confluent
spec:
  principal:
    name: c3
    type: user
  role: SystemAdmin
  ## if use other kafkaRestClass except for default, need to configure accordingly
  #kafkaRestClassRef:
  # name: default
---
# rolebinding `sr-mtls-1` allows `sr` to see schemaregistry information
# `schemaRegistryCllusterId` pattern: `id_<schemaregistry.name>_<namespace>`
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: sr-mtls-1
  namespace: confluent
spec:
  # The Schema Registry cluster is named `schemaregistry` and is deployed in the
  # namespace `confluent`
  # The Schema Registry cluster id naming pattern is: id_<sr-cluster-name>_<namespace>
  clustersScopeByIds:
    schemaRegistryClusterId: id_schemaregistry_confluent
  principal:
    name: sr
    type: user
  role: SystemAdmin
---
# rolebinding `sr-mtls-2` gives user `sr` the role
# `SecurityAdmin` for cluster `schemaregistry` in namespace `confluent`
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: sr-mtls-2
  namespace: confluent
spec:
  # The Schema Registry cluster is named `schemaregistry` and is deployed in the
  # namespace `confluent`
  # The Schema Registry cluster id naming pattern is: id_<sr-cluster-name>_<namespace>
  clustersScopeByIds:
    schemaRegistryClusterId: id_schemaregistry_confluent
  principal:
    name: sr
    type: user
  role: SecurityAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: sr-mtls-3
  namespace: confluent
spec:
  principal:
    type: user
    name: sr
  resourcePatterns:
    - name: _confluent-license
      patternType: LITERAL
      resourceType: Topic
    - name: _confluent-command
      patternType: LITERAL
      resourceType: Topic
    # The schemas topic is named: _schemas_<sr-cluster-name>_<namespace>
    - name: _schemas_schemaregistry_confluent
      patternType: LITERAL
      resourceType: Topic
    # The Schema Registry consumer group is: id_<sr-cluster-name>_<namespace>
    - name: id_schemaregistry_confluent
      patternType: LITERAL
      resourceType: Group
  role: ResourceOwner
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: connect-mtls-1
  namespace: confluent
spec:
  # The Connect cluster is named `connect` and is deployed in the namespace `confluent`
  # The Connect cluster id naming pattern is: <namespace>.<connect-cluster-name>
  clustersScopeByIds:
    connectClusterId: confluent.connect
  principal:
    type: user
    name: connect
  role: SecurityAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: connect-mtls-2
  namespace: confluent
spec:
  principal:
    name: connect
    type: user
  resourcePatterns:
    - name: _confluent-monitoring
      patternType: PREFIXED
      resourceType: Topic
  role: DeveloperWrite
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: connect-mtls-3
  namespace: confluent
spec:
  principal:
    name: connect
    type: user
  resourcePatterns:
    - name: confluent.connect
      patternType: LITERAL
      resourceType: Group
    - name: confluent.connect-
      patternType: PREFIXED
      resourceType: Topic
  role: ResourceOwner
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: krp-mtls-1
  namespace: confluent
spec:
  principal:
    name: krp
    type: user
  resourcePatterns:
    - name: _confluent-license
      patternType: LITERAL
      resourceType: Topic
    - name: _confluent-command
      patternType: LITERAL
      resourceType: Topic
  role: ResourceOwner
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: krp-mtls-2
  namespace: confluent
spec:
  principal:
    name: krp
    type: user
  resourcePatterns:
    - name: _confluent-monitoring
      patternType: PREFIXED
      resourceType: Topic
  role: DeveloperWrite
