apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  listeners:
    controller:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/
      tls:
        enabled: true
  configOverrides:
    server:
      - listener.name.replication.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.name.replication.ssl.keystore.location=/mnt/sslcerts/keystore.p12
      - listener.name.replication.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.name.replication.ssl.truststore.location=/mnt/sslcerts/truststore.p12
      - listener.name.replication.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.security.protocol.map=CONTROLLER:SSL,REPLICATION:SSL
  authorization:
    superUsers:
      - User:kafka
    type: rbac
  dependencies:
    mdsKafkaCluster:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
  tls:
    secretRef: tls-kafka
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-kafka
  authorization:
    superUsers:
      - User:kafka
    type: rbac
  services:
    mds:
      impersonation:
        admins:
          - User:kafka
          - User:krp
          - User:connect
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: my.domain
          prefix: rb-mds
      provider:
        mtls:
          sslClientAuthentication: "required"
          principalMappingRules:
            - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
            - "DEFAULT"
        file:
          secretRef: file-secret
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
      tls:
        enabled: true
    external:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
      tls:
        enabled: true
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: mydomain.example
          brokerPrefix: b
          bootstrapPrefix: kafka
  dependencies:
    kafkaRest:
      authentication:
        type: mtls
      tls:
        enabled: true
        secretRef: tls-kafka
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: mtls
      clusterRef:
        name: kraftcontroller
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server-connect:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  authorization:
    type: rbac
  tls:
    secretRef: tls-connect
  authentication:
    type: mtls
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: connect
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  authorization:
    type: rbac
  tls:
    secretRef: tls-schemaregistry
  authentication:
    type: mtls
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: schemaregistry
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  authorization:
    type: rbac
  tls:
    secretRef: tls-kafkarestproxy
  authentication:
    type: mtls
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: kafkarestproxy
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
  image:
    application: confluentinc/cp-enterprise-control-center:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  authorization:
    type: rbac
  dataVolumeCapacity: 10Gi
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: controlcenter
  tls:
    secretRef: tls-controlcenter
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.confluent.svc.cluster.local:8083
        authentication:
          type: mtls
        tls:
          enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: mtls
        sslClientAuthentication: true
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    endpoint: https://kafka.confluent.svc.cluster.local:8090
    authentication:
      type: mtls
    tls:
      secretRef: tls-kafka
