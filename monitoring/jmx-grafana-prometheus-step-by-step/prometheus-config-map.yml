apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: |-
    groups:
    - name: example
      rules:

      # Alert for any instance that is unreachable for >2 minutes.
      - alert: service_down
        expr: up == 0
        for: 2m
        labels:
          severity: page
        annotations:
          summary: "Instance {{ $labels.instance }} down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 2 minutes."

      - alert: high_load
        expr: node_load1 > 0.5
        for: 2m
        labels:
          severity: page
        annotations:
          summary: "Instance {{ $labels.instance }} under high load"
          description: "{{ $labels.instance }} of job {{ $labels.job }} is under high load."

  prometheus.yml: |-
    global:
      # How frequently to scrape targets by default
      # Default 15s
      scrape_interval: 30s
      # How frequently to evaluate rules.
      # Default 15s
      evaluation_interval: 15s
      # How long until a scrape request times out.
      # Default to 10s.
      # Required because cp-demo is using cpu throttling, so let's leave enough time to fetch the metrics in particular for the first time as it needs to compile all rexps
      scrape_timeout: 30s

    rule_files:
      - "alert.rules"

    alerting:
      alertmanagers:
        - scheme: http
          static_configs:
            - targets:
                - "alertmanager:9093"

    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]
          
      - job_name: "zookeeper"
        static_configs:
          - targets:
              - "zookeeper-0.zookeeper.confluent.svc.cluster.local:7778"
              - "zookeeper-1.zookeeper.confluent.svc.cluster.local:7778"
              - "zookeeper-2.zookeeper.confluent.svc.cluster.local:7778"
            labels:
              env: "dev"
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_service
          - source_labels: [__meta_kubernetes_node_name]
            action: replace
            target_label: kubernetes_node
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod

      - job_name: "kafka-broker"
        static_configs:
          - targets:
              - "kafka-0.kafka.confluent.svc.cluster.local:7778"
              - "kafka-1.kafka.confluent.svc.cluster.local:7778"
              - "kafka-2.kafka.confluent.svc.cluster.local:7778"
            labels:
              kubernetes_namespace: confluent
              env: "dev"
              platform_confluent_io_type: kafka
              app: kafka
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'

      - job_name: "schema-registry"
        static_configs:
          - targets:
              - "schemaregistry-0.schemaregistry.confluent.svc.cluster.local:7778"
              - "schemaregistry-1.schemaregistry.confluent.svc.cluster.local:7778"
            labels:
              kubernetes_namespace: confluent
              env: "dev"
              platform_confluent_io_type: schemaregistry
              app: schemaregistry
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'

      - job_name: "kafka-connect"
        static_configs:
          - targets:
              - "connect-0.connect.confluent.svc.cluster.local:7778"
              - "connect-1.connect.confluent.svc.cluster.local:7778"
            labels:
              env: "dev"
              kafka_connect_cluster_id: "cluster1"
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'


      - job_name: "ksqldb"
        static_configs:
          - targets:
              - "ksqldb-0.ksqldb.confluent.svc.cluster.local:7778"
            labels:
              env: "dev"
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'

      - job_name: "control-center"
        static_configs:
          - targets:
              - "controlcenter-0.controlcenter.confluent.svc.cluster.local:7778"
            labels:
              kubernetes_namespace: confluent
              env: "dev"
              platform_confluent_io_type: controlcenter
              app: controlcenter
        relabel_configs:
          - source_labels: [__address__]
            target_label: hostname
            regex: '([^:]+)(:[0-9]+)?'
            replacement: '${1}'

      # No producer for the moment in cp-demo
      # - job_name: 'kafka-producer'
      #   static_configs:
      #     - targets:
      #         - 'kafka1:1235'
      #       labels:
      #         env: 'dev'
      #   relabel_configs:
      #     - source_labels: [__address__]
      #       target_label: hostname
      #       regex: '([^:]+)(:[0-9]+)?'
      #       replacement: '${1}'

      # No consumer for the moment in cp-demo
      # - job_name: 'kafka-consumer'
      #   static_configs:
      #     - targets:
      #         - "kafka1:1236"
      #       labels:
      #         env: 'dev'
      #   relabel_configs:
      #     - source_labels: [__address__]
      #       target_label: hostname
      #       regex: '([^:]+)(:[0-9]+)?'
      #       replacement: '${1}'
