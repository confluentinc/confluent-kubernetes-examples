---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: destination
spec:
  podTemplate:
    resources:
      requests:
        cpu: 100m # 1
        memory: 512Mi # 4Gi
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  # Configure to have TLS encryption, and use auto-generated server certs
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: destination
spec:
  podTemplate:
    resources:
      requests:
        cpu: 100m # 1
        memory: 512Mi # 4Gi
  ## `auto.create.topics.enable` config enables replicated topic to be created automatically
  configOverrides:
    server:
      - auto.create.topics.enable=true
  replicas: 3
  # Configure to have TLS encryption, and use auto-generated server certs
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain-users.json`, with value being a JSON file with
          # username & password values.
          secretRef: credential
      # Configure to have TLS encryption, and use auto-generated server certs
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain-users.json`, with value being a JSON file with
          # username & password values.
          secretRef: credential
      # Configure to have TLS encryption, and use auto-generated server certs
      tls:
        enabled: true
  image:
    application: confluentinc/cp-server:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: destination
spec:
  replicas: 1
  # Configure to have TLS encryption, and use auto-generated server certs
  tls:
    autoGeneratedCerts: true
  image:
    application: confluentinc/cp-schema-registry:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.destination.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
# Confluent Replicator is built as a connector, and so will use the `Connect` CRD.
kind: Connect
metadata:
  name: replicator
  namespace: destination
spec:
  replicas: 2
  # Configure to have TLS encryption, and use auto-generated server certs
  tls:
    autoGeneratedCerts: true
  image:
    # Use the `cp-enterprise-replicator-operator` Docker image, that contains the Replicator jars
    application: confluentinc/cp-enterprise-replicator:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  podTemplate:
    resources:
      requests:
        cpu: 1
        memory: 2Gi
    envVars:
      # The  Confluent Replicator Monitoring Extension allows for detailed metrics from Replicator tasks to be 
      # collected using an exposed REST API.
      # You'll need to update the version string in replicate-test-extension-<version>.jar based on what 
      # CP version you are using
      - name: CLASSPATH
        value: /usr/share/java/kafka-connect-replicator/replicator-rest-extension-7.4.0.jar
  configOverrides:
    # When the Connect distributed cluster hosting Replicator has a REST endpoint with SSL encryption 
    # enabled, you must configure security properties for the SSL keystore and truststore used by the 
    # Replicator monitoring extension to communicate with other Connect nodes in the cluster.
    # `/mnt/sslcerts/truststore.jks` is the truststore location when auto-genarated certs are used.
    jvm:
      - -Djavax.net.ssl.trustStore=/mnt/sslcerts/truststore.jks
      - -Djavax.net.ssl.trustStorePassword=mystorepassword
    server:
      # To activate the monitoring extension, configure this property
      - rest.extension.classes=io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
      # This specifies that Replicator is the Connector configured
      - connector.class=io.confluent.connect.replicator.ReplicatorSourceConnector
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.destination.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
    interceptor:
      enabled: true
