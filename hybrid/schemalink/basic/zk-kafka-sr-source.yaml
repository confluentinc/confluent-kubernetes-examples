apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: source
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: source
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  services:
    kafkaRest:
      authentication:
        type: basic
        basic:
          secretRef: credential
          roles:
            - Administrators
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: source
spec:
  replicas: 2
  image:
    application: confluentinc/cp-schema-registry:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  tls:
    autoGeneratedCerts: true
  authentication:
    type: basic
    basic:
      secretRef: credential
      roles:
        - Administrators
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.source.svc.cluster.local:9092
  passwordEncoder:
    secretRef: password-encoder-secret
  enableSchemaExporter: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Schema
metadata:
  name: test-schema
  namespace: source
spec:
  data:
    format: avro
    configRef: schema-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schema-config
  namespace: source
data:
  schema: |
    {
      "namespace": "io.confluent.examples.clients.basicavro",
      "type": "record",
      "name": "Payment",
      "fields": [
        {"name": "id", "type": "string"},
        {"name": "amount", "type": "double"},
        {"name": "email", "type": "string"}
      ]
    }
---
