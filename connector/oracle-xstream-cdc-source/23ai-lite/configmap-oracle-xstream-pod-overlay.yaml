apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-oracle-xstream-pod-overlay
  namespace: confluent
data:
  pod-template.yaml: |
    spec:
      template:
        spec:
          # Init container to install Oracle Instant Client, Oracle XStream CDC plugin, and dependencies
          initContainers:
          - name: oracle-xstream-cdc-installer
            image: container-registry.oracle.com/database/free:latest-lite
            env:
            - name: ORACLE_INSTANT_CLIENT_VERSION
              value: "21.8.0.0.0"
            - name: ORACLE_XSTREAM_CDC_PLUGIN_VERSION
              value: "1.0.2"
            command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "=== Oracle XStream CDC Complete Setup ==="
              
              # Set the version of Oracle Instant Client (configurable)
              ORACLE_VERSION="${ORACLE_INSTANT_CLIENT_VERSION:-21.8.0.0.0}"
              
              # Derive URL path from version for download
              # Extract major and minor versions (e.g., "21.8.0.0.0" -> "21" and "8")
              ORACLE_MAJOR=$(echo "$ORACLE_VERSION" | cut -d. -f1)
              ORACLE_MINOR=$(echo "$ORACLE_VERSION" | cut -d. -f2)
              
              # Generate URL path (e.g., "21" + "8" + "000" = "218000")
              ORACLE_URL_PATH="${ORACLE_MAJOR}${ORACLE_MINOR}000"
              
              # Set the version of Oracle XStream CDC Plugin (configurable)
              ORACLE_XSTREAM_CDC_VERSION="${ORACLE_XSTREAM_CDC_PLUGIN_VERSION:-1.0.2}"
              
              echo "📋 Using Oracle Instant Client version: $ORACLE_VERSION"
              echo "📋 Using Oracle XStream CDC plugin version: $ORACLE_XSTREAM_CDC_VERSION"
              
              # ============================================================================
              # STEP 0: Verification - Check required tools are available
              # ============================================================================
              echo "🔍 [Step 0] Verifying required tools..."
              
              # Check for required tools
              command -v unzip >/dev/null 2>&1 || { echo "❌ unzip not found - cannot extract files"; exit 1; }
              command -v curl >/dev/null 2>&1 || { echo "❌ curl not found - cannot download files"; exit 1; }
              
              echo "✅ Required tools verified: unzip, curl available"
              
              # ============================================================================
              # STEP 1: Oracle Instant Client - Download and extract
              # ============================================================================
              echo "📦 [Step 1] Downloading Oracle Instant Client..."
              cd /tmp
              
              # Download Oracle Instant Client packages
              curl -o "instantclient-basic-linux.x64-${ORACLE_VERSION}dbru.zip" \
                "https://download.oracle.com/otn_software/linux/instantclient/${ORACLE_URL_PATH}/instantclient-basic-linux.x64-${ORACLE_VERSION}dbru.zip"
              curl -o "instantclient-jdbc-linux.x64-${ORACLE_VERSION}dbru.zip" \
                "https://download.oracle.com/otn_software/linux/instantclient/${ORACLE_URL_PATH}/instantclient-jdbc-linux.x64-${ORACLE_VERSION}dbru.zip"
              curl -o "instantclient-sqlplus-linux.x64-${ORACLE_VERSION}dbru.zip" \
                "https://download.oracle.com/otn_software/linux/instantclient/${ORACLE_URL_PATH}/instantclient-sqlplus-linux.x64-${ORACLE_VERSION}dbru.zip"
              
              # Extract all packages to temporary directory
              echo "📦 Extracting Oracle Instant Client packages..."
              unzip -o -q "instantclient-basic-linux.x64-${ORACLE_VERSION}dbru.zip" -d /oracle-libs/
              unzip -o -q "instantclient-jdbc-linux.x64-${ORACLE_VERSION}dbru.zip" -d /oracle-libs/
              unzip -o -q "instantclient-sqlplus-linux.x64-${ORACLE_VERSION}dbru.zip" -d /oracle-libs/
              
              # Rename downloaded directory to fixed name for easier path management
              mv /oracle-libs/instantclient_* /oracle-libs/instantclient
              
              # Verify Oracle Instant Client extraction
              echo "🔍 Verifying Oracle Instant Client extraction..."
              ls -la /oracle-libs/instantclient/
              
              echo "✅ Oracle Instant Client downloaded and extracted"
              
              # ============================================================================
              # STEP 2: Oracle XStream CDC Plugin - Download from Confluent Hub
              # ============================================================================
              echo "🔌 [Step 2] Downloading Oracle XStream CDC Plugin..."
              
              PLUGIN_ZIP="/tmp/oracle-xstream-cdc-plugin.zip"
              
              # Download from official Confluent Hub API
              if curl -o "$PLUGIN_ZIP" "https://api.hub.confluent.io/api/plugins/confluentinc/kafka-connect-oracle-xstream-cdc-source/versions/${ORACLE_XSTREAM_CDC_VERSION}/archive" 2>/dev/null; then
                echo "✅ Downloaded Oracle XStream CDC plugin from Confluent Hub API"
              else
                echo "❌ Plugin download failed - cannot proceed"
                exit 1
              fi
              
              # Extract plugin to components directory
              mkdir -p /usr/share/confluent-hub-components
              echo "📦 Extracting Oracle XStream CDC plugin..."
              unzip -o -q "$PLUGIN_ZIP" -d /usr/share/confluent-hub-components/
              
              PLUGIN_DIR="/usr/share/confluent-hub-components/confluentinc-kafka-connect-oracle-xstream-cdc-source-${ORACLE_XSTREAM_CDC_VERSION}"
              echo "✅ Plugin extracted successfully to $PLUGIN_DIR"
              ls -la "$PLUGIN_DIR"
              
              # ============================================================================
              # STEP 3: Setup - libaio, copy Oracle JARs, configure LD_LIBRARY_PATH
              # ============================================================================
              echo "🔧 [Step 3] Setting up libaio and Oracle dependencies..."
              
              # Setup libaio 
              echo "📦 Installing libaio..."
              mkdir -p /oracle-libs/system-libs
              
              # Oracle Free image has libaio in /usr/lib64/ - copy it to shared volume
              echo "📋 Copying libaio from Oracle Free image..."
              cp /usr/lib64/libaio.so* /oracle-libs/system-libs/
              
              # Create standard symlinks for libaio
              cd /oracle-libs/system-libs/
              ln -sf libaio.so.1.0.1 libaio.so.1
              ln -sf libaio.so.1.0.1 libaio.so
              echo "✅ libaio ready: $(ls libaio.so.1.*)"
              
              # Copy Oracle JARs to plugin lib directory
              echo "📋 Copying Oracle JARs to plugin..."
              cp /oracle-libs/instantclient/ojdbc8.jar "$PLUGIN_DIR/lib/"
              cp /oracle-libs/instantclient/xstreams.jar "$PLUGIN_DIR/lib/"
              cp /oracle-libs/instantclient/orai18n.jar "$PLUGIN_DIR/lib/"
              
              # Configure LD_LIBRARY_PATH 
              export LD_LIBRARY_PATH="/oracle-libs/instantclient:/oracle-libs/system-libs:${LD_LIBRARY_PATH}"
              export ORACLE_HOME="/oracle-libs/instantclient"
              
              echo "🔧 LD_LIBRARY_PATH configured: $LD_LIBRARY_PATH"
              echo "🔧 ORACLE_HOME configured: $ORACLE_HOME"
                            
              # Verify Oracle JARs in plugin
              echo "📦 Oracle JARs in plugin lib:"
              ls -la "$PLUGIN_DIR/lib/" | grep -E "(ojdbc8|xstreams|orai18n)"
              
              echo "✅ Setup complete - libaio, JARs, and library paths configured"
              
              # ============================================================================
              # STEP 4: Verification - Test Oracle client and SQL*Plus
              # ============================================================================
              echo "🧪 [Step 4] Testing Oracle client and SQL*Plus..."
              
              echo "🔍 Testing Oracle Instant Client"
              echo "📋 dependencies:"
              ldd /oracle-libs/instantclient/libclntsh.so.21.1 2>/dev/null | grep -E "(libaio|not found)" || echo "Dependencies OK"
              
              # Test SQL*Plus functionality
              echo "🧪 Testing SQL*Plus..."
              if /oracle-libs/instantclient/sqlplus -? >/dev/null 2>&1; then
                echo "✅ SQL*Plus test passed - Oracle client ready for XStream CDC"
              else
                echo "⚠️  SQL*Plus test failed - checking dependencies"
                echo "📋 SQL*Plus dependencies:"
                ldd /oracle-libs/instantclient/sqlplus 2>/dev/null | head -5 || echo "Dependency check complete"
              fi
              
              # Final verification
              echo "🎯 Final verification:"
              echo "   📁 Oracle Home: $ORACLE_HOME"
              echo "   📚 Library Path: $LD_LIBRARY_PATH"
              echo "   🔌 Plugin: $PLUGIN_DIR"
              echo "   🗄️  libaio: $([ -f "/oracle-libs/system-libs/libaio.so.1" ] && echo "Available" || echo "Not found")"
              
              echo "🎉 Oracle XStream CDC setup complete!"
              
            volumeMounts:
            - name: oracle-libs
              mountPath: /oracle-libs
            - name: confluent-hub-components
              mountPath: /usr/share/confluent-hub-components
          containers:
          - name: connect
            env:
            # Oracle paths (fixed directory name, version only used for download)
            - name: LD_LIBRARY_PATH
              value: "/oracle-libs/instantclient:/oracle-libs/system-libs:${LD_LIBRARY_PATH}"
            - name: ORACLE_HOME
              value: "/oracle-libs/instantclient"
            volumeMounts:
            - name: oracle-libs
              mountPath: /oracle-libs
            - name: confluent-hub-components
              mountPath: /usr/share/confluent-hub-components
          volumes:
          - name: oracle-libs
            emptyDir: {}
          - name: confluent-hub-components
            emptyDir: {} 